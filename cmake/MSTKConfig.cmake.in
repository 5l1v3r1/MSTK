#-----------------------------------------------------------------------------
#
# MSTK configuration file template
#
#-----------------------------------------------------------------------------

set(MSTK_VERSION_MAJOR @MSTK_VERSION_MAJOR@ CACHE STRING "Major version of MSTK")
set(MSTK_VERSION_MINOR @MSTK_VERSION_MINOR@ CACHE STRING "Minor version of MSTK")
set(MSTK_VERSION_PATCH @MSTK_VERSION_PATCH@ CACHE STRING "Patch version of MSTK")
set(MSTK_VERSION "@MSTK_VERSION_MAJOR@.@MSTK_VERSION_MINOR@.@MSTK_VERSION_PATCH@" CACHE STRING "MSTK Version")


# Compiler Definitions
set(CMAKE_C_COMPILER @CMAKE_C_COMPILER@ CACHE FILEPATH "C Compiler used for compiling MSTK")
set(CMAKE_CXX_COMPILER @CMAKE_CXX_COMPILER@ CACHE FILEPATH "CXX Compiler used for compiling MSTK")


# Compiler Flags
set(CMAKE_C_FLAGS "@CMAKE_C_FLAGS@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_C_FLAGS_DEBUG "@CMAKE_C_FLAGS_DEBUG@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_C_FLAGS_RELEASE "@CMAKE_C_FLAGS_RELEASE@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_C_FLAGS_MINSIZEREL "@CMAKE_C_FLAGS_MINSIZEREL@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "@CMAKE_C_FLAGS_RELWITHDEBINFO@" CACHE STRING "MSTK C compiler flags")

set(CMAKE_CXX_FLAGS "@CMAKE_CXX_FLAGS@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_CXX_FLAGS_DEBUG "@CMAKE_CXX_FLAGS_DEBUG@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_CXX_FLAGS_RELEASE "@CMAKE_CXX_FLAGS_RELEASE@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_CXX_FLAGS_MINSIZEREL "@CMAKE_CXX_FLAGS_MINSIZEREL@" CACHE STRING "MSTK C compiler flags")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "@CMAKE_CXX_FLAGS_RELWITHDEBINFO@" CACHE STRING "MSTK C compiler flags")


# MSTK Library target name
set(MSTK_LIBRARIES "mstk::@MSTKLIB@")

# MSTK Build info
set(MSTK_BUILD_TYPE @CMAKE_BUILD_TYPE@ CACHE STRING "DEPRECATED: MSTK build type")

# MSTK library 
set(MSTK_LIBRARY_DIR @INSTALL_DIR@/lib/ CACHE PATH "DEPRECATED: MSTK library location")
set(MSTK_LIBRARY_NAME @MSTKLIB@ CACHE STRING "DEPRECATED: MSTK library name")

# MSTK includes
set(MSTK_INCLUDE_DIR @INSTALL_DIR@/include CACHE PATH "DEPRECATED: MSTK include file locations")



# MSTK options and explicit variables (if someone wanted to use them directly)

set(ENABLE_PARALLEL @ENABLE_PARALLEL@ CACHE BOOL "Enable parallel mesh management")

#-------------------------
# The following section is Deprecated and will probably disappear in
# the coming releases. Import the MSTK target and set it as a
# dependency for your system
# -------------------------
if (ENABLE_PARALLEL)
  set(ENABLE_METIS @ENABLE_METIS@ CACHE BOOL "Enable use of METIS as a partitioner")
  set(METIS_DIR @METIS_DIR@ CACHE PATH "DEPRECATE?: Path to top level METIS installation dir")
  set(METIS_INCLUDE_DIRS @METIS_INCLUDE_DIRS@ CACHE PATH "DEPRECATED: Path to METIS include files")
  set(METIS_LIBRARY_DIR @METIS_LIBRARY_DIR@ CACHE PATH "DEPRECATED: Path to METIS library")
  set(METIS_LIBRARIES @METIS_LIBRARIES@ CACHE STRING "DEPRECATED: METIS library names")

  set(ENABLE_ZOLTAN @ENABLE_ZOLTAN@ CACHE BOOL "Enable use of ZOLTAN as a partitioner")
  set(ZOLTAN_DIR @ZOLTAN_DIR@ CACHE PATH "DEPRECATE?: Path to top level ZOLTAN installation dir")
  set(ZOLTAN_INCLUDE_DIRS @ZOLTAN_INCLUDE_DIRS@ CACHE PATH "DEPRECATED: Path to ZOLTAN include files")
  set(ZOLTAN_LIBRARY_DIR @ZOLTAN_LIBRARY_DIR@ CACHE PATH "DEPRECATED: Path to ZOLTAN library")
  set(ZOLTAN_LIBRARIES @ZOLTAN_LIBRARIES@ CACHE STRING "DEPRECATED: ZOLTAN library names")
endif()

set(ENABLE_ExodusII @ENABLE_ExodusII@ CACHE BOOL "Enable use of Exodus II libraries")

if (ENABLE_ExodusII)
  set(ExodusII_DIR @ExodusII_DIR@ CACHE PATH "DEPRECATE?: Path to top level ExodusII installation dir")
  set(ExodusII_INCLUDE_DIRS @ExodusII_INCLUDE_DIRS@ CACHE PATH "DEPRECATED: Path to ExodusII include files")
  set(ExodusII_LIBRARY_DIR @ExodusII_LIBRARY_DIR@ CACHE PATH "DEPRECATED: Path to ExodusII library")
  set(ExodusII_LIBRARIES @ExodusII_LIBRARIES@ CACHE STRING "DEPRECATED: ExodusII library names")

  # Since we switched to a target based system and netCDF is a
  # secondary dependency (MSTK->ExodusII->netCDF), this may not have
  # the right values
  set(NetCDF_DIR @NetCDF_DIR@ CACHE STRING "DEPRECATED: Path to top level NetCDF installation dir")
  set(NetCDF_INCLUDE_DIRS @NetCDF_INCLUDE_DIRS@ CACHE PATH "DEPRECATE?: Path to NetCDF include files")
  set(NetCDF_LIBRARY_DIR @NetCDF_LIBRARY_DIR@ CACHE PATH "DEPRECATED: Path to NetCDF library")
  set(NetCDF_LIBRARIES @NetCDF_LIBRARIES@ CACHE STRING "DEPRECATED: NetCDF library names")

  # Since we switched to a target based system and HDF5 is a tertiary
  # dependency (MSTK-ExodusII->netCDF->HDF5), this may not have the
  # right values
  set(HDF5_ROOT @HDF5_ROOT@ CACHE STRING "DEPRECATE?: Path to top level HDF5 installation dir")
  set(HDF5_INCLUDE_DIRS @HDF5_INCLUDE_DIRS@ CACHE PATH "DEPRECATED: Path to HDF5 include files")
  set(HDF5_LIBRARIES @HDF5_LIBRARIES_EXPORT@ CACHE STRING "DEPRECATED: HDF5 libraries and other necessary link libraries")
endif()

# Since we switched to a target based system, this may not have the right values
set(MSTK_TPL_LIBRARIES @MSTK_TPL_LIBRARIES_EXPORT@ CACHE STRING "DEPRECATED: All third party libraries MSTK is built with")
#-------------------------------

# Find target dependencies (See Daniel Pfeifer, Effective CMake)
# If you wish to use the modules MSTK used to find its dependencies
# include
# @PROJECT_BINARY_DIR@/cmake/mstk/modules
# in the cmake module path
include(CMakeFindDependencyMacro)
if (ENABLE_PARALLEL)
  if (ENABLE_METIS)
    find_dependency(METIS)
  endif ()
  if (ENABLE_ZOLTAN)
    find_dependency(Zoltan)
  endif ()
endif ()

if (ENABLE_ExodusII)
  find_dependency(ExodusII)
endif ()


# include MSTK targets (See Daniel Pfeifer, Effective CMake)
include ("${CMAKE_CURRENT_LIST_DIR}/MSTKTargets.cmake")





